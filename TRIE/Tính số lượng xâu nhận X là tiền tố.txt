https://drive.google.com/file/d/1ds-5fkIIHsWIOE2RcQm2PwX57BbVDl84/view
///===========================================
int n , trie[3000005][15] , node , m ;
ll f[3000005], d[3000005];
string s, x;
///===========================================
void add(string z)
{
    int vt = 1;
    for (int i = 0; i < z.size(); i++)
    {
        if ( !trie[vt][z[i]-'a'+1] ) trie[vt][z[i]-'a'+1] = ++node;
        vt = trie[vt][z[i]-'a'+1];
    }
    d[vt] ++;
}
///===========================================
void cb(int val)
{
    for (int i = 'a'; i <= 'j'; i++)
    {
        if ( trie[val][i-'a'+1] )
        {
            cb(trie[val][i-'a'+1]);
            //cout << trie[val][i-'a'+1] <<"\n";
            f[val] += f[trie[val][i-'a'+1]];
        }
    }
    f[val] += d[val];
}
///===========================================
ll tinh(string z)
{
    int vt = 1;
    for (int i = 0; i < z.size(); i++)
    {
        if ( !trie[vt][z[i]-'a'+1] ) return 0;
        vt = trie[vt][z[i]-'a'+1];
    }
    //cout << vt <<" "<< f[vt] <<"\n";
    return f[vt];
}
///===========================================
///===========================================
int main()
{
    pk(); rose();
    node = 1;
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> s;
        add(s);
    }
    cb(1);
    cin >> m;
    while ( m -- )
    {
        cin >> x;
        cout << tinh(x) <<"\n";
    }
}
///===========================================