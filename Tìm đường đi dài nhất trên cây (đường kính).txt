///===========================================
int n , m , maxx = 0 , x , y , f[100005] , d[100005];
vector<int>g[100005];
int vt , ans = 0;
///===========================================
void DFS(int u,int vv)
{
    d[u] = vv;
    for(auto gt : g[u])
    {
        if (d[gt]!=vv)
        {
            f[gt] = f[u] + 1;
            if ( f[gt] > ans ) ans = f[gt] , vt = gt;
            maxx = max ( maxx , f[gt] );
            DFS(gt,vv);
        }
    }
}
///===========================================
int main()
{
    pk(); rose();
    cin >> n >> m;
    for (int i = 1; i <= m; i++)
    {
        cin >> x >> y;
        g[x].push_back(y);
        g[y].push_back(x);
    }
    for (int i = 1; i <= n; i++)
    {
        vt = i;
        if ( !d[i] )
        {
            ans = 0;
            DFS(i,1);
            f[vt] = 0;
            DFS(vt,2);
        }
    }
    cout << maxx;
}
///===========================================